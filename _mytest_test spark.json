{"paragraphs":[{"text":"%dep\nz.load(\"/usr/share/java/mysql-connector-java.jar\")","user":"sb","dateUpdated":"2018-08-22T15:11:09+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@2b3ae2b4\n"}]},"apps":[],"jobName":"paragraph_1534935902483_1221022034","id":"20180822-130502_1967319558","dateCreated":"2018-08-22T13:05:02+0200","dateStarted":"2018-08-22T15:11:09+0200","dateFinished":"2018-08-22T15:11:19+0200","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1467"},{"text":"Class.forName(\"com.mysql.jdbc.Driver\")","user":"sb","dateUpdated":"2018-08-22T15:11:22+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res0: Class[_] = class com.mysql.jdbc.Driver\n"}]},"apps":[],"jobName":"paragraph_1534936020493_-1410928055","id":"20180822-130700_170125706","dateCreated":"2018-08-22T13:07:00+0200","dateStarted":"2018-08-22T15:11:22+0200","dateFinished":"2018-08-22T15:11:43+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1468"},{"text":"val jdbcUsername = \"test\"\nval jdbcPassword = \"test\"\nval jdbcHostname = \"boil1\"\nval jdbcPort = 3306\nval jdbcDatabase =\"testdb\"\nval jdbcDriver = \"com.mysql.jdbc.Driver\"\nval jdbcUrl = s\"jdbc:mysql://${jdbcHostname}:${jdbcPort}/${jdbcDatabase}?user=${jdbcUsername}&password=${jdbcPassword}\"\nval connProp = new java.util.Properties()\nconnProp.setProperty(\"driver\", \"com.mysql.jdbc.Driver\") ","user":"sb","dateUpdated":"2018-08-22T15:11:47+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"jdbcUsername: String = test\njdbcPassword: String = test\njdbcHostname: String = boil1\njdbcPort: Int = 3306\njdbcDatabase: String = testdb\njdbcDriver: String = com.mysql.jdbc.Driver\njdbcUrl: String = jdbc:mysql://boil1:3306/testdb?user=test&password=test\nconnProp: java.util.Properties = {}\nres1: Object = null\n"}]},"apps":[],"jobName":"paragraph_1534936091531_2118513167","id":"20180822-130811_1549671132","dateCreated":"2018-08-22T13:08:11+0200","dateStarted":"2018-08-22T15:11:47+0200","dateFinished":"2018-08-22T15:11:49+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1469"},{"text":"val salesDF = spark.read.jdbc(jdbcUrl, \"SALES\", connProp).cache\nsalesDF.show\nsalesDF.registerTempTable(\"SALES\")","user":"sb","dateUpdated":"2018-08-22T15:11:51+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"salesDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [SALESID: int, SALESPERSONID: int ... 3 more fields]\n+-------+-------------+----------+---------+--------+\n|SALESID|SALESPERSONID|CUSTOMERID|PRODUCTID|QUANTITY|\n+-------+-------------+----------+---------+--------+\n|6555170|           21|      4080|       23|     528|\n|6555171|           21|      4080|       23|     528|\n|6555172|           21|      4080|       23|     528|\n|6555173|           21|      4080|       23|     528|\n|6555174|           21|      4080|       23|     528|\n|6555175|           21|      4080|       23|     528|\n|6555176|           21|      4080|       23|     528|\n|6555177|           21|      4080|       23|     528|\n|6555178|           21|      4080|       23|     528|\n|6555179|           21|      4080|       23|     528|\n|6555180|           21|      4080|       23|     528|\n|6555181|           21|      4080|       23|     528|\n|6555182|           21|      4080|       23|     528|\n|6555183|           21|      4080|       23|     528|\n|6555184|           21|      4080|       23|     528|\n|6555185|           21|      4080|       23|     528|\n|6555186|           21|      4080|       23|     528|\n|6555187|           21|      4080|       23|     528|\n|6555188|           21|      4080|       23|     528|\n|6555189|           21|      4080|       23|     528|\n+-------+-------------+----------+---------+--------+\nonly showing top 20 rows\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1534936140052_542258220","id":"20180822-130900_1138901465","dateCreated":"2018-08-22T13:09:00+0200","dateStarted":"2018-08-22T15:11:51+0200","dateFinished":"2018-08-22T15:13:17+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1470"},{"text":"val customersDF = spark.read.jdbc(jdbcUrl, \"CUSTOMERS\", connProp).cache\ncustomersDF.show\ncustomersDF.registerTempTable(\"CUSTOMERS\")","user":"sb","dateUpdated":"2018-08-22T15:13:20+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"customersDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [CUSTOMERID: int, FIRSTNAME: string ... 2 more fields]\n+----------+---------+-------------+---------+\n|CUSTOMERID|FIRSTNAME|MIDDLEINITIAL| LASTNAME|\n+----------+---------+-------------+---------+\n|         1|    Aaron|             |Alexander|\n|         2|    Aaron|             |   Bryant|\n|         3|    Aaron|             |   Butler|\n|         4|    Aaron|             |     Chen|\n|         5|    Aaron|             |  Coleman|\n|         6|    Aaron|             |      Con|\n|         7|    Aaron|             |  Edwards|\n|         8|    Aaron|             |   Flores|\n|         9|    Aaron|             |   Foster|\n|        10|    Aaron|             | Gonzales|\n|        11|    Aaron|             |  Griffin|\n|        12|    Aaron|             |Henderson|\n|        13|    Aaron|             |Hernandez|\n|        14|    Aaron|             |     Hill|\n|        15|    Aaron|             |      Jai|\n|        16|    Aaron|             |  Jenkins|\n|        17|    Aaron|             |      Lal|\n|        18|    Aaron|             |       Li|\n|        19|    Aaron|             | Nicholls|\n|        20|    Aaron|             |    Perry|\n+----------+---------+-------------+---------+\nonly showing top 20 rows\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1534936177675_786051106","id":"20180822-130937_734569731","dateCreated":"2018-08-22T13:09:37+0200","dateStarted":"2018-08-22T15:13:20+0200","dateFinished":"2018-08-22T15:13:21+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1471"},{"text":"val productsDF = spark.read.jdbc(jdbcUrl, \"PRODUCTS\", connProp).cache\nproductsDF.show\nproductsDF.registerTempTable(\"PRODUCTS\")","user":"sb","dateUpdated":"2018-08-22T15:13:24+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"productsDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [PRODUCTID: int, NAME: string ... 1 more field]\n+---------+--------------------+--------+\n|PRODUCTID|                NAME|   PRICE|\n+---------+--------------------+--------+\n|        1|     Adjustable Race|  1.6000|\n|        2|        Bearing Ball|  0.8000|\n|        3|     BB Ball Bearing|  2.4000|\n|        4|Headset Ball Bear...|  0.0000|\n|        5|               Blade|189.6000|\n|        6|         LL Crankarm|380.4000|\n|        7|         ML Crankarm|190.8000|\n|        8|         HL Crankarm|319.0000|\n|        9|     Chainring Bolts|  0.0000|\n|       10|       Chainring Nut|192.6000|\n|       11|           Chainring|193.2000|\n|       12|          Crown Race|516.8000|\n|       13|         Chain Stays| 64.8000|\n|       14|             Decal 1|195.0000|\n|       15|             Decal 2|130.4000|\n|       16|           Down Tube|457.8000|\n|       17|   Mountain End Caps|590.4000|\n|       18|       Road End Caps|592.2000|\n|       19|    Touring End Caps|  0.0000|\n|       20|            Fork End|397.2000|\n+---------+--------------------+--------+\nonly showing top 20 rows\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1534936829292_-1551580876","id":"20180822-132029_537574751","dateCreated":"2018-08-22T13:20:29+0200","dateStarted":"2018-08-22T15:13:25+0200","dateFinished":"2018-08-22T15:13:28+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1472"},{"text":"val employeeDF=spark.read.jdbc(jdbcUrl,\"EMPLOYEES\", connProp).cache\nemployeeDF.show\nemployeeDF.registerTempTable(\"EMPLOYEES\")","user":"sb","dateUpdated":"2018-08-22T15:13:31+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"employeeDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [EMPLOYEEID: int, FIRSTNAME: string ... 2 more fields]\n+----------+-----------+-------------+--------------+\n|EMPLOYEEID|  FIRSTNAME|MIDDLEINITIAL|      LASTNAME|\n+----------+-----------+-------------+--------------+\n|         1|    Abraham|            e|        Bennet|\n|         2|   Reginald|            l|Blotchet-Halls|\n|         3|     Cheryl|            a|        Carson|\n|         4|     Michel|            e|      DeFrance|\n|         5|      Innes|            e|  del Castillo|\n|         6|        Ann|            u|          Dull|\n|         7|   Marjorie|            r|         Green|\n|         8|Morningstar|            r|        Greene|\n|         9|       Burt|            r|    Gringlesby|\n|        10|     Sheryl|            u|        Hunter|\n|        11|      Livia|            a|        Karsen|\n|        12|   Charlene|            o|      Locksley|\n|        13|    Stearns|            a|    MacFeather|\n|        14|    Heather|            c|      McBadden|\n|        15|    Michael|            '|       O'Leary|\n|        16|     Sylvia|            a|      Panteley|\n|        17|     Albert|            i|        Ringer|\n|        18|       Anne|            i|        Ringer|\n|        19|    Meander|            m|         Smith|\n|        20|       Dean|            t|      Straight|\n+----------+-----------+-------------+--------------+\nonly showing top 20 rows\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"}]},"apps":[],"jobName":"paragraph_1534936856548_-1773935092","id":"20180822-132056_775637767","dateCreated":"2018-08-22T13:20:56+0200","dateStarted":"2018-08-22T15:13:32+0200","dateFinished":"2018-08-22T15:13:33+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1473"},{"text":"def show_timing[T](proc: => T): T = {\n    val start : Double =System.nanoTime()\n    val res = proc // call the code\n    val end :Double = System.nanoTime()\n    val e: Double  = (end-start)/1000000000\n    println(\"Time elapsed: \" + e + \" secs\")\n    res\n}","user":"sb","dateUpdated":"2018-08-22T15:13:48+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"show_timing: [T](proc: => T)T\n"}]},"apps":[],"jobName":"paragraph_1534936869112_221403353","id":"20180822-132109_378007998","dateCreated":"2018-08-22T13:21:09+0200","dateStarted":"2018-08-22T15:13:48+0200","dateFinished":"2018-08-22T15:13:48+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1474"},{"text":"var res = spark.sql(\" select salespersonid, sum(quantity) from SALES group by salespersonid\")\n show_timing({ res.show})","user":"sb","dateUpdated":"2018-08-22T15:15:23+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res: org.apache.spark.sql.DataFrame = [salespersonid: int, sum(quantity): bigint]\n+-------------+-------------+\n|salespersonid|sum(quantity)|\n+-------------+-------------+\n|           12|    137106510|\n|           22|    142694255|\n|            1|    253157371|\n|           13|    115901253|\n|            6|    137011892|\n|           16|    156602520|\n|            3|    141419313|\n|           20|    150578276|\n|            5|    122556133|\n|           19|    118040382|\n|           15|    142102550|\n|           17|    152023161|\n|            9|    151546773|\n|            4|    149166324|\n|            8|    159361160|\n|           23|    101498042|\n|            7|    142789998|\n|           10|    164706674|\n|           21|    141373607|\n|           11|    137331674|\n+-------------+-------------+\nonly showing top 20 rows\n\nTime elapsed: 2.095380171 secs\n"}]},"apps":[],"jobName":"paragraph_1534939518178_-64292178","id":"20180822-140518_441871968","dateCreated":"2018-08-22T14:05:18+0200","dateStarted":"2018-08-22T15:15:23+0200","dateFinished":"2018-08-22T15:15:26+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1475"},{"text":"var res = spark.sql(\"select * from (select salespersonid, sum(quantity) from SALES group by salespersonid) as s,EMPLOYEES where salespersonid = employeeid\")\n show_timing({ res.show})","user":"sb","dateUpdated":"2018-08-22T15:16:56+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res: org.apache.spark.sql.DataFrame = [salespersonid: int, sum(quantity): bigint ... 4 more fields]\n+-------------+-------------+----------+-----------+-------------+------------+\n|salespersonid|sum(quantity)|EMPLOYEEID|  FIRSTNAME|MIDDLEINITIAL|    LASTNAME|\n+-------------+-------------+----------+-----------+-------------+------------+\n|           12|    137106510|        12|   Charlene|            o|    Locksley|\n|           22|    142694255|        22|    Johnson|            h|       White|\n|            1|    253157371|         1|    Abraham|            e|      Bennet|\n|           13|    115901253|        13|    Stearns|            a|  MacFeather|\n|            6|    137011892|         6|        Ann|            u|        Dull|\n|           16|    156602520|        16|     Sylvia|            a|    Panteley|\n|            3|    141419313|         3|     Cheryl|            a|      Carson|\n|           20|    150578276|        20|       Dean|            t|    Straight|\n|            5|    122556133|         5|      Innes|            e|del Castillo|\n|           19|    118040382|        19|    Meander|            m|       Smith|\n|           15|    142102550|        15|    Michael|            '|     O'Leary|\n|           17|    152023161|        17|     Albert|            i|      Ringer|\n|            9|    151546773|         9|       Burt|            r|  Gringlesby|\n|            4|    149166324|         4|     Michel|            e|    DeFrance|\n|            8|    159361160|         8|Morningstar|            r|      Greene|\n|           23|    101498042|        23|      Akiko|            o|    Yokomoto|\n|            7|    142789998|         7|   Marjorie|            r|       Green|\n|           10|    164706674|        10|     Sheryl|            u|      Hunter|\n|           21|    141373607|        21|       Dirk|            t|    Stringer|\n|           11|    137331674|        11|      Livia|            a|      Karsen|\n+-------------+-------------+----------+-----------+-------------+------------+\nonly showing top 20 rows\n\nTime elapsed: 1.953696626 secs\n"}]},"apps":[],"jobName":"paragraph_1534943639223_333220713","id":"20180822-151359_2024272210","dateCreated":"2018-08-22T15:13:59+0200","dateStarted":"2018-08-22T15:16:56+0200","dateFinished":"2018-08-22T15:16:58+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1476"},{"text":"var res = spark.sql(\"select * from (select c.*,q from (select customerid,sum(quantity) as q from SALES group by customerid) as s,CUSTOMERS as c where c.customerid = s.customerid) as r order by q desc LIMIT 20\")\n show_timing({ res.show})","user":"sb","dateUpdated":"2018-08-22T15:18:14+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res: org.apache.spark.sql.DataFrame = [CUSTOMERID: int, FIRSTNAME: string ... 3 more fields]\n+----------+---------+-------------+---------+--------+\n|CUSTOMERID|FIRSTNAME|MIDDLEINITIAL| LASTNAME|       q|\n+----------+---------+-------------+---------+--------+\n|     15440|    Paige|             |  Ramirez|28795662|\n|     17600|   Sheena|             |      Lal|28690538|\n|     17360|     Seth|             |    Perry|28597577|\n|      7600|    Grant|             |      Pal|28213614|\n|      4000|Christian|            R|      Lee|27070266|\n|     11840|   Kristi|            A| Saunders|26782365|\n|      1840|   Ashlee|            J| Andersen|26553752|\n|      2080|  Barbara|            K|      Jai|26417710|\n|     14000|  Melanie|            N|Alexander|26089460|\n|      5440|  Destiny|            L|   Flores|25808679|\n|      6320|    Emily|            R|    Clark|25762539|\n|      9680|  Jessica|            A|   Hughes|25638959|\n|      8240| Isabella|             |    Lopez|25373974|\n|     16080|  Rebekah|            A|     Suri|25063524|\n|      4400|  Colleen|             |    Zheng|25046571|\n|      9920|  Jocelyn|             | Gonzales|24978881|\n|     19680|   Yvonne|             |    McKay|24816565|\n|     12240|   Lauren|             |     Cook|24765966|\n|      5680|   Donald|            M|   KovÃ¡r|24644415|\n|      4160| Clarence|             |      Pal|24567515|\n+----------+---------+-------------+---------+--------+\n\nTime elapsed: 3.292834502 secs\n"}]},"apps":[],"jobName":"paragraph_1534943756626_1429186440","id":"20180822-151556_615553186","dateCreated":"2018-08-22T15:15:56+0200","dateStarted":"2018-08-22T15:18:14+0200","dateFinished":"2018-08-22T15:18:17+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1477"},{"text":"var res = spark.sql(\"SELECT C.FIRSTNAME,C.LASTNAME,V.* FROM (SELECT P.PRODUCTID,S.SALESID,C.CUSTOMERID AS CID, S.QUANTITY * P.PRICE AS VAL FROM SALES S,PRODUCTS P,CUSTOMERS C WHERE P.PRODUCTID=S.PRODUCTID AND S.CUSTOMERID = C.CUSTOMERID GROUP BY P.PRODUCTID,S.SALESID,C.CUSTOMERID,S.QUANTITY,P.PRICE) AS V, CUSTOMERS AS C WHERE V.CID = C.CUSTOMERID ORDER BY V.VAL DESC LIMIT 20\")\n show_timing({ res.show})","user":"sb","dateUpdated":"2018-08-22T15:21:37+0200","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res: org.apache.spark.sql.DataFrame = [FIRSTNAME: string, LASTNAME: string ... 4 more fields]\n+---------+--------+---------+-------+----+------------+\n|FIRSTNAME|LASTNAME|PRODUCTID|SALESID| CID|         VAL|\n+---------+--------+---------+-------+----+------------+\n|    Brett|    Rana|      258|5246566|2640|2776737.5200|\n|    Brett|    Rana|      258|6143301|2640|2730220.0100|\n|    Brett|    Rana|      258|6352722|2640|2730220.0100|\n|    Brett|    Rana|      258|6363086|2640|2730220.0100|\n|    Brett|    Rana|      258|5249181|2640|2730220.0100|\n|    Brett|    Rana|      258|6355285|2640|2730220.0100|\n|    Brett|    Rana|      258|5241758|2640|2730220.0100|\n|    Brett|    Rana|      258|6360558|2640|2730220.0100|\n|    Brett|    Rana|      258|5568325|2640|2730220.0100|\n|    Brett|    Rana|      258|5419290|2640|2730220.0100|\n|    Brett|    Rana|      258|6139237|2640|2730220.0100|\n|    Brett|    Rana|      258|6561207|2640|2730220.0100|\n|    Brett|    Rana|      258|5251487|2640|2730220.0100|\n|    Brett|    Rana|      258|5419305|2640|2730220.0100|\n|    Brett|    Rana|      258|5417094|2640|2730220.0100|\n|    Brett|    Rana|      258|5417093|2640|2730220.0100|\n|    Brett|    Rana|      258|6357863|2640|2730220.0100|\n|    Brett|    Rana|      258|5568340|2640|2730220.0100|\n|    Brett|    Rana|      258|6357872|2640|2730220.0100|\n|    Brett|    Rana|      258|5570661|2640|2730220.0100|\n+---------+--------+---------+-------+----+------------+\n\nTime elapsed: 28.632094948 secs\n"}]},"apps":[],"jobName":"paragraph_1534943844413_1281701728","id":"20180822-151724_689381218","dateCreated":"2018-08-22T15:17:24+0200","dateStarted":"2018-08-22T15:21:37+0200","dateFinished":"2018-08-22T15:22:06+0200","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1478"},{"user":"sb","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1534943926409_-1225013977","id":"20180822-151846_1876175068","dateCreated":"2018-08-22T15:18:46+0200","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:1479"}],"name":"/mytest/test spark","id":"2DN45J7XT","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}